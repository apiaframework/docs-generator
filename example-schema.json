{
  "schema_version": 1,
  "host": "katapult-api.dev.adam.ac",
  "namespace": "/core/v1",
  "api": "CoreAPI/Base",
  "objects": [
    {
      "type": "api",
      "value": {
        "id": "CoreAPI/Base",
        "name": "Katapult Core API",
        "description": null,
        "authenticator": "CoreAPI/Authenticator",
        "route_set": {
          "routes": [
            {
              "path": "schema",
              "request_method": "GET",
              "controller": "Rapid/Schema/Controller",
              "endpoint": "Rapid/Schema/Controller/SchemaEndpoint",
              "group": null
            },
            {
              "path": "data_centers",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/DataCenters",
              "endpoint": "CoreAPI/Controllers/DataCenters/ListEndpoint",
              "group": "data_centers"
            },
            {
              "path": "data_centers/:data_center",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/DataCenters",
              "endpoint": "CoreAPI/Controllers/DataCenters/InfoEndpoint",
              "group": "data_centers"
            },
            {
              "path": "organizations",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/Organizations",
              "endpoint": "CoreAPI/Controllers/Organizations/ListEndpoint",
              "group": "organizations"
            },
            {
              "path": "organizations/:organization",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/Organizations",
              "endpoint": "CoreAPI/Controllers/Organizations/InfoEndpoint",
              "group": "organizations"
            },
            {
              "path": "organizations/:organization/managed",
              "request_method": "POST",
              "controller": "CoreAPI/Controllers/Organizations",
              "endpoint": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint",
              "group": "organizations.managed"
            },
            {
              "path": "organizations/:organization/disk_templates",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/DiskTemplates",
              "endpoint": "CoreAPI/Controllers/DiskTemplates/ListEndpoint",
              "group": "disk_templates"
            },
            {
              "path": "organizations/:organization/virtual_machines",
              "request_method": "GET",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint",
              "group": "virtual_machines"
            },
            {
              "path": "virtual_machines/:virtual_machine",
              "request_method": "GET",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint",
              "group": "virtual_machines"
            },
            {
              "path": "virtual_machines/:virtual_machine",
              "request_method": "DELETE",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint",
              "group": "virtual_machines"
            },
            {
              "path": "virtual_machines/:virtual_machine/package",
              "request_method": "PUT",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint",
              "group": "virtual_machines"
            },
            {
              "path": "virtual_machines/:virtual_machine/flexible_resources",
              "request_method": "PUT",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint",
              "group": "virtual_machines"
            },
            {
              "path": "organizations/:organization/virtual_machines/build",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint",
              "group": "virtual_machines.build"
            },
            {
              "path": "organizations/:organization/virtual_machines/build_from_spec",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint",
              "group": "virtual_machines.build"
            },
            {
              "path": "virtual_machines/builds/:virtual_machine_build",
              "request_method": "GET",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint",
              "group": "virtual_machines.build"
            },
            {
              "path": "virtual_machines/:virtual_machine/start",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint",
              "group": "virtual_machines.power"
            },
            {
              "path": "virtual_machines/:virtual_machine/stop",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint",
              "group": "virtual_machines.power"
            },
            {
              "path": "virtual_machines/:virtual_machine/shutdown",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint",
              "group": "virtual_machines.power"
            },
            {
              "path": "virtual_machines/:virtual_machine/reset",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint",
              "group": "virtual_machines.power"
            },
            {
              "path": "virtual_machines/:virtual_machine/console_sessions",
              "request_method": "POST",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint",
              "group": "virtual_machines.console"
            },
            {
              "path": "virtual_machine_packages",
              "request_method": "GET",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint",
              "group": "virtual_machine_packages"
            },
            {
              "path": "virtual_machine_packages/:virtual_machine_package",
              "request_method": "GET",
              "controller": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages",
              "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint",
              "group": "virtual_machine_packages"
            },
            {
              "path": "organizations/:organization/disk_backup_policies",
              "request_method": "GET",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "disk_backup_policies/:disk_backup_policy",
              "request_method": "GET",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "disk_backup_policies/:disk_backup_policy",
              "request_method": "DELETE",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "disk_backup_policies/:disk_backup_policy",
              "request_method": "PATCH",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "virtual_machines/:virtual_machine/disk_backup_policies",
              "request_method": "POST",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "disks/:disk/disk_backup_policies",
              "request_method": "POST",
              "controller": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
              "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint",
              "group": "disk_backup_policies"
            },
            {
              "path": "organizations/:organization/dns/zones",
              "request_method": "GET",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "organizations/:organization/dns/zones",
              "request_method": "POST",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone",
              "request_method": "GET",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone",
              "request_method": "DELETE",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone/verification_details",
              "request_method": "GET",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone/verify",
              "request_method": "POST",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone/update_ttl",
              "request_method": "POST",
              "controller": "CoreAPI/DNS/Controllers/DNSZones",
              "endpoint": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint",
              "group": "dns.zones"
            },
            {
              "path": "dns/zones/:dns_zone/records",
              "request_method": "GET",
              "controller": "CoreAPI/DNS/Controllers/DNSRecords",
              "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint",
              "group": "dns.records"
            },
            {
              "path": "dns/zones/:dns_zone/records",
              "request_method": "POST",
              "controller": "CoreAPI/DNS/Controllers/DNSRecords",
              "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint",
              "group": "dns.records"
            },
            {
              "path": "dns/records/:dns_record",
              "request_method": "GET",
              "controller": "CoreAPI/DNS/Controllers/DNSRecords",
              "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint",
              "group": "dns.records"
            },
            {
              "path": "dns/records/:dns_record",
              "request_method": "PATCH",
              "controller": "CoreAPI/DNS/Controllers/DNSRecords",
              "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint",
              "group": "dns.records"
            },
            {
              "path": "dns/records/:dns_record",
              "request_method": "DELETE",
              "controller": "CoreAPI/DNS/Controllers/DNSRecords",
              "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint",
              "group": "dns.records"
            },
            {
              "path": "organizations/:organization/firewall",
              "request_method": "GET",
              "controller": "CoreAPI/Firewalls/Controllers/Firewalls",
              "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint",
              "group": "firewalls"
            },
            {
              "path": "firewalls/:firewall",
              "request_method": "PATCH",
              "controller": "CoreAPI/Firewalls/Controllers/Firewalls",
              "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint",
              "group": "firewalls"
            },
            {
              "path": "firewalls/:firewall/apply",
              "request_method": "POST",
              "controller": "CoreAPI/Firewalls/Controllers/Firewalls",
              "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint",
              "group": "firewalls"
            },
            {
              "path": "firewalls/:firewall/changes",
              "request_method": "GET",
              "controller": "CoreAPI/Firewalls/Controllers/Firewalls",
              "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint",
              "group": "firewalls"
            },
            {
              "path": "firewalls/:firewall/rules",
              "request_method": "GET",
              "controller": "CoreAPI/Firewalls/Controllers/FirewallRules",
              "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint",
              "group": "firewalls.rules"
            },
            {
              "path": "firewalls/:firewall/rules",
              "request_method": "POST",
              "controller": "CoreAPI/Firewalls/Controllers/FirewallRules",
              "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint",
              "group": "firewalls.rules"
            },
            {
              "path": "firewalls/rules/:rule",
              "request_method": "PATCH",
              "controller": "CoreAPI/Firewalls/Controllers/FirewallRules",
              "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint",
              "group": "firewalls.rules"
            },
            {
              "path": "firewalls/rules/:rule",
              "request_method": "DELETE",
              "controller": "CoreAPI/Firewalls/Controllers/FirewallRules",
              "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint",
              "group": "firewalls.rules"
            },
            {
              "path": "organizations/:organization/available_networks",
              "request_method": "GET",
              "controller": "CoreAPI/Controllers/Networks",
              "endpoint": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint",
              "group": "networks"
            },
            {
              "path": "organizations/:organization/certificates",
              "request_method": "GET",
              "controller": "CoreAPI/Certificates/Controllers/Certificates",
              "endpoint": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint",
              "group": "certificates"
            },
            {
              "path": "certificates/:certificate",
              "request_method": "GET",
              "controller": "CoreAPI/Certificates/Controllers/Certificates",
              "endpoint": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint",
              "group": "certificates"
            },
            {
              "path": "organizations/:organization/load_balancers",
              "request_method": "GET",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint",
              "group": "load_balancers"
            },
            {
              "path": "organizations/:organization/load_balancers",
              "request_method": "POST",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint",
              "group": "load_balancers"
            },
            {
              "path": "load_balancers/:load_balancer",
              "request_method": "GET",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint",
              "group": "load_balancers"
            },
            {
              "path": "load_balancers/:load_balancer",
              "request_method": "PATCH",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint",
              "group": "load_balancers"
            },
            {
              "path": "load_balancers/:load_balancer",
              "request_method": "DELETE",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint",
              "group": "load_balancers"
            },
            {
              "path": "load_balancers/:load_balancer/rules",
              "request_method": "GET",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint",
              "group": "load_balancers.rules"
            },
            {
              "path": "load_balancers/:load_balancer/rules",
              "request_method": "POST",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint",
              "group": "load_balancers.rules"
            },
            {
              "path": "load_balancers/rules/:load_balancer_rule",
              "request_method": "GET",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint",
              "group": "load_balancers.rules"
            },
            {
              "path": "load_balancers/rules/:load_balancer_rule",
              "request_method": "PATCH",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint",
              "group": "load_balancers.rules"
            },
            {
              "path": "load_balancers/rules/:load_balancer_rule",
              "request_method": "DELETE",
              "controller": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
              "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint",
              "group": "load_balancers.rules"
            }
          ],
          "groups": [
            {
              "id": "data_centers",
              "name": "Data Centers",
              "description": null,
              "groups": []
            },
            {
              "id": "organizations",
              "name": "Organizations",
              "description": null,
              "groups": [
                {
                  "id": "organizations.managed",
                  "name": "Managed organizations",
                  "description": null,
                  "groups": []
                }
              ]
            },
            {
              "id": "disk_templates",
              "name": "Disk templates",
              "description": null,
              "groups": []
            },
            {
              "id": "virtual_machines",
              "name": "Virtual machines",
              "description": null,
              "groups": [
                {
                  "id": "virtual_machines.build",
                  "name": "Build",
                  "description": "Endpoints used for building or creating new virtual machines",
                  "groups": []
                },
                {
                  "id": "virtual_machines.power",
                  "name": "Power Functions",
                  "description": "Endpoints for performing power functions (i.e. start, stop etc...) on a virtual machine",
                  "groups": []
                },
                {
                  "id": "virtual_machines.console",
                  "name": "Console",
                  "description": "Endpoints for managing console access to a virtual machine",
                  "groups": []
                }
              ]
            },
            {
              "id": "virtual_machine_packages",
              "name": "Virtual machine packages",
              "description": null,
              "groups": []
            },
            {
              "id": "disk_backup_policies",
              "name": "Disk backup policies",
              "description": "Endpoints for managing DNS zones/domains",
              "groups": []
            },
            {
              "id": "dns",
              "name": "DNS/Domains",
              "description": null,
              "groups": [
                {
                  "id": "dns.zones",
                  "name": "DNS Zones",
                  "description": "Endpoints for managing DNS zones/domains",
                  "groups": []
                },
                {
                  "id": "dns.records",
                  "name": "DNS Records",
                  "description": "Endpoints for managing DNS records beloning to existing DNS zones/domains",
                  "groups": []
                }
              ]
            },
            {
              "id": "firewalls",
              "name": "Firewalls",
              "description": "Endpoints for managing firewalls",
              "groups": [
                {
                  "id": "firewalls.rules",
                  "name": "Firewall rules",
                  "description": "Endpoints for managing firewall rules",
                  "groups": []
                }
              ]
            },
            {
              "id": "networks",
              "name": "Networks",
              "description": null,
              "groups": []
            },
            {
              "id": "certificates",
              "name": "Certificates",
              "description": null,
              "groups": []
            },
            {
              "id": "load_balancers",
              "name": "Load balancers",
              "description": null,
              "groups": [
                {
                  "id": "load_balancers.rules",
                  "name": "Load balancer rules",
                  "description": null,
                  "groups": []
                }
              ]
            }
          ]
        }
      }
    },
    {
      "type": "authenticator",
      "value": {
        "id": "CoreAPI/Authenticator",
        "name": "API Token Authenticator",
        "description": "Authenticates requests using an API token provided in the Authorization header",
        "type": "bearer",
        "potential_errors": [
          "CoreAPI/Authenticator/MissingAPIToken",
          "CoreAPI/Authenticator/InvalidAPIToken",
          "CoreAPI/Errors/RateLimitReached"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Authenticator/MissingAPIToken",
        "name": null,
        "description": "No API token was provided in the Authorization header. Ensure a token is provided prefixed with Bearer",
        "code": "missing_api_token",
        "http_status": 400,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Authenticator/InvalidAPIToken",
        "name": null,
        "description": "The API token provided was not valid (it may not exist or have expired)",
        "code": "invalid_api_token",
        "http_status": 403,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Errors/RateLimitReached",
        "name": null,
        "description": "You have reached the rate limit for this type of request",
        "code": "rate_limit_reached",
        "http_status": 429,
        "fields": [
          {
            "id": "CoreAPI/Errors/RateLimitReached/TotalPermittedField",
            "name": "total_permitted",
            "description": "The total number of requests per minute that are permitted",
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "scalar",
      "value": {
        "id": "Rapid/Scalars/Integer",
        "name": "Integer",
        "description": null
      }
    },
    {
      "type": "scalar",
      "value": {
        "id": "Rapid/Scalars/String",
        "name": "String",
        "description": null
      }
    },
    {
      "type": "scalar",
      "value": {
        "id": "Rapid/Scalars/Boolean",
        "name": "Boolean",
        "description": null
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Controllers/DataCenters",
        "name": "Data Centers",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/Controllers/DataCenters/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/Controllers/DataCenters/InfoEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/DataCenters/ListEndpoint",
        "name": "List data centers",
        "description": "Provides a full list of all data centers",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/DataCenters/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": []
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/DataCenters/ListEndpoint/DataCentersField",
            "name": "data_centers",
            "description": null,
            "type": "CoreAPI/Objects/DataCenter",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,permalink,country[id,name]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/DataCenters/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": []
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/DataCenter",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/DataCenter/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DataCenter/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DataCenter/PermalinkField",
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DataCenter/CountryField",
            "name": "country",
            "description": null,
            "type": "CoreAPI/Objects/Country",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Country",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Country/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Country/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Country/IsoCode2Field",
            "name": "iso_code2",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Country/IsoCode3Field",
            "name": "iso_code3",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Country/TimeZoneField",
            "name": "time_zone",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Country/EuField",
            "name": "eu",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/DataCenters/InfoEndpoint",
        "name": "Get data center",
        "description": "Provide details for a specific data center",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/DataCenters/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "data_center",
              "description": null,
              "type": "CoreAPI/ArgumentSets/DataCenterLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/DataCenters/InfoEndpoint/DataCenterField",
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/Objects/DataCenter",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,permalink,country[id,name]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/DataCenters/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/ArgumentSets/DataCenterLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/DataCenterLookup",
        "name": "Data Center Lookup",
        "description": "Provides for data centers to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/ArgumentSets/DataCenterLookup/DataCenterNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/DataCenterLookup/DataCenterNotFound",
        "name": null,
        "description": "No data centers was found matching any of the criteria provided in the arguments",
        "code": "data_center_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Controllers/Organizations",
        "name": "Organizations",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/Controllers/Organizations/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/Controllers/Organizations/InfoEndpoint"
          },
          {
            "name": "create_managed",
            "endpoint": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/ListEndpoint",
        "name": "List organizations",
        "description": "This will return a list of all organizations the authenticated identity has access to",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/Organizations/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": []
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/Organizations/ListEndpoint/OrganizationsField",
            "name": "organizations",
            "description": null,
            "type": "CoreAPI/Objects/Organization",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id, name, sub_domain, personal, created_at, suspended"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": []
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Organization",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Organization/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/SubDomainField",
            "name": "sub_domain",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/InfrastructureDomainField",
            "name": "infrastructure_domain",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/PersonalField",
            "name": "personal",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/SuspendedField",
            "name": "suspended",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/ManagedField",
            "name": "managed",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/BillingNameField",
            "name": "billing_name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/Address1Field",
            "name": "address1",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/Address2Field",
            "name": "address2",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/Address3Field",
            "name": "address3",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/Address4Field",
            "name": "address4",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/PostcodeField",
            "name": "postcode",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/VatNumberField",
            "name": "vat_number",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/CurrencyField",
            "name": "currency",
            "description": null,
            "type": "CoreAPI/Objects/Currency",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/CountryField",
            "name": "country",
            "description": null,
            "type": "CoreAPI/Objects/Country",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Organization/CountryStateField",
            "name": "country_state",
            "description": null,
            "type": "CoreAPI/Objects/CountryState",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "scalar",
      "value": {
        "id": "Rapid/Scalars/UnixTime",
        "name": "Unix Timestamp",
        "description": null
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Currency",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Currency/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Currency/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Currency/IsoCodeField",
            "name": "iso_code",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Currency/SymbolField",
            "name": "symbol",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/CountryState",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/CountryState/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/CountryState/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/CountryState/CodeField",
            "name": "code",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/CountryState/CountryField",
            "name": "country",
            "description": null,
            "type": "CoreAPI/Objects/Country",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/InfoEndpoint",
        "name": "Get organization",
        "description": "Returns information about a specific organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/Organizations/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/Organizations/InfoEndpoint/OrganizationField",
            "name": "organization",
            "description": null,
            "type": "CoreAPI/Objects/Organization",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/OrganizationLookup",
        "name": "Organization Lookup",
        "description": "Provides for organizations to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "sub_domain",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/ArgumentSets/OrganizationLookup/OrganizationNotFound",
          "CoreAPI/ArgumentSets/OrganizationLookup/OrganizationSuspended"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/OrganizationLookup/OrganizationNotFound",
        "name": null,
        "description": "No organization was found matching any of the criteria provided in the arguments",
        "code": "organization_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/OrganizationLookup/OrganizationSuspended",
        "name": null,
        "description": "An organization was found from the arguments provided but it was suspended",
        "code": "organization_suspended",
        "http_status": 403,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint",
        "name": "Create managed organization",
        "description": "Create a new managed organization within an existing organization",
        "http_status": 201,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "name",
              "description": null,
              "type": "Rapid/Scalars/String",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "sub_domain",
              "description": null,
              "type": "Rapid/Scalars/String",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint/OrganizationField",
            "name": "organization",
            "description": null,
            "type": "CoreAPI/Objects/Organization",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Controllers/Organizations/CreateManagedEndpoint/OrganizationLimitReached",
          "CoreAPI/Errors/ValidationError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "sub_domain",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Controllers/Organizations/CreateManagedEndpoint/OrganizationLimitReached",
        "name": null,
        "description": "The maxmium number of organizations that can be created has been reached",
        "code": "organization_limit_reached",
        "http_status": 422,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Errors/ValidationError",
        "name": null,
        "description": "A validation error occurred with the object that was being created/updated/deleted",
        "code": "validation_error",
        "http_status": 422,
        "fields": [
          {
            "id": "CoreAPI/Errors/ValidationError/ErrorsField",
            "name": "errors",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Controllers/DiskTemplates",
        "name": null,
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/Controllers/DiskTemplates/ListEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/DiskTemplates/ListEndpoint",
        "name": "List disk templates",
        "description": "Return a list of all disk templates owned by an organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/DiskTemplates/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "include_universal",
              "description": null,
              "type": "Rapid/Scalars/Boolean",
              "required": false,
              "array": false,
              "default": "false"
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/DiskTemplates/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Controllers/DiskTemplates/ListEndpoint/DiskTemplatesField",
            "name": "disk_templates",
            "description": null,
            "type": "CoreAPI/Objects/DiskTemplate",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,description,permalink,universal,latest_version[id,number],operating_system[id,name]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/DiskTemplates/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "include_universal",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": "false"
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "Rapid/PaginationObject",
        "name": "Pagination Details",
        "description": "Provides information about how data has been paginated",
        "fields": [
          {
            "id": "Rapid/PaginationObject/CurrentPageField",
            "name": "current_page",
            "description": "The current page",
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "Rapid/PaginationObject/TotalPagesField",
            "name": "total_pages",
            "description": "The total number of pages",
            "type": "Rapid/Scalars/Integer",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "Rapid/PaginationObject/TotalField",
            "name": "total",
            "description": "The total number of items across all pages",
            "type": "Rapid/Scalars/Integer",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "Rapid/PaginationObject/PerPageField",
            "name": "per_page",
            "description": "The number of items per page",
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "Rapid/PaginationObject/LargeSetField",
            "name": "large_set",
            "description": "Is this a large set and therefore the total number of records cannot be returned?",
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/DiskTemplate",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/DiskTemplate/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/DescriptionField",
            "name": "description",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/PermalinkField",
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/UniversalField",
            "name": "universal",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/LatestVersionField",
            "name": "latest_version",
            "description": null,
            "type": "CoreAPI/Objects/DiskTemplateVersion",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplate/OperatingSystemField",
            "name": "operating_system",
            "description": null,
            "type": "CoreAPI/Objects/OperatingSystem",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/DiskTemplateVersion",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/DiskTemplateVersion/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplateVersion/NumberField",
            "name": "number",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplateVersion/StableField",
            "name": "stable",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/DiskTemplateVersion/SizeInGbField",
            "name": "size_in_gb",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/OperatingSystem",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/OperatingSystem/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/OperatingSystem/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/OperatingSystem/BadgeField",
            "name": "badge",
            "description": null,
            "type": "CoreAPI/Objects/Attachment",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Attachment",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Attachment/UrlField",
            "name": "url",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Attachment/FileNameField",
            "name": "file_name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Attachment/FileTypeField",
            "name": "file_type",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Attachment/FileSizeField",
            "name": "file_size",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Attachment/DigestField",
            "name": "digest",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Attachment/TokenField",
            "name": "token",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines",
        "name": "Virtual Machines",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint"
          },
          {
            "name": "build",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint"
          },
          {
            "name": "build_from_spec",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint"
          },
          {
            "name": "start",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint"
          },
          {
            "name": "stop",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint"
          },
          {
            "name": "shutdown",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint"
          },
          {
            "name": "reset",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint"
          },
          {
            "name": "create_console_session",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint"
          },
          {
            "name": "change_package",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint"
          },
          {
            "name": "change_flexible_resources",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint",
        "name": "List virtual machines",
        "description": "Returns a list of all virtual machines for a given organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint/VirtualMachinesField",
            "name": "virtual_machines",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,fqdn,hostname,created_at,zone[id,name,permalink,data_center[id,name,permalink]],ip_addresses[address],package[name]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/HostnameField",
            "name": "hostname",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/FqdnField",
            "name": "fqdn",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/InitialRootPasswordField",
            "name": "initial_root_password",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/StateField",
            "name": "state",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineStateEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/ZoneField",
            "name": "zone",
            "description": null,
            "type": "CoreAPI/Objects/Zone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/OrganizationField",
            "name": "organization",
            "description": null,
            "type": "CoreAPI/Objects/Organization",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/GroupField",
            "name": "group",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/PackageField",
            "name": "package",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/AttachedIsoField",
            "name": "attached_iso",
            "description": null,
            "type": "CoreAPI/Objects/ISO",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/TagsField",
            "name": "tags",
            "description": null,
            "type": "CoreAPI/Objects/Tag",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachine/IpAddressesField",
            "name": "ip_addresses",
            "description": null,
            "type": "CoreAPI/Objects/IPAddress",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineStateEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "stopped", "description": null },
          { "name": "failed", "description": null },
          { "name": "started", "description": null },
          { "name": "starting", "description": null },
          { "name": "resetting", "description": null },
          { "name": "migrating", "description": null },
          { "name": "stopping", "description": null },
          { "name": "shutting_down", "description": null },
          { "name": "orphaned", "description": null }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Zone",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Zone/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Zone/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Zone/PermalinkField",
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Zone/DataCenterField",
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/Objects/DataCenter",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup/SegregateField",
            "name": "segregate",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/PermalinkField",
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/CpuCoresField",
            "name": "cpu_cores",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/Ipv4AddressesField",
            "name": "ipv4_addresses",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/MemoryInGbField",
            "name": "memory_in_gb",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/StorageInGbField",
            "name": "storage_in_gb",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/PrivacyField",
            "name": "privacy",
            "description": null,
            "type": "CoreAPI/Objects/PrivacyTypesEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage/IconField",
            "name": "icon",
            "description": null,
            "type": "CoreAPI/Objects/Attachment",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Objects/PrivacyTypesEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "public", "description": "Public" },
          { "name": "private", "description": "Private" }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/ISO",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/ISO/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/ISO/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/ISO/OperatingSystemField",
            "name": "operating_system",
            "description": null,
            "type": "CoreAPI/Objects/OperatingSystem",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Tag",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Tag/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Tag/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Tag/ColorField",
            "name": "color",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Tag/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/IPAddress",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/IPAddress/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/IPAddress/AddressField",
            "name": "address",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/IPAddress/ReverseDnsField",
            "name": "reverse_dns",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/IPAddress/VipField",
            "name": "vip",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/IPAddress/AddressWithMaskField",
            "name": "address_with_mask",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint",
        "name": "Get virtual machine",
        "description": "Return information about a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint/VirtualMachineField",
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
        "name": "VirtualMachine Lookup",
        "description": "Provides for virtual machines to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "fqdn",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ObjectInTrash",
          "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup/VirtualMachineNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Errors/ObjectInTrash",
        "name": null,
        "description": "The object found is in the trash and therefore cannot be manipulated through the API. It should be restored in order to run this operation.",
        "code": "object_in_trash",
        "http_status": 406,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup/VirtualMachineNotFound",
        "name": null,
        "description": "No virtual machine was found matching any of the criteria provided in the arguments",
        "code": "virtual_machine_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint",
        "name": "Build virtual machine",
        "description": "Builds a new virtual machine based on the arguments provided to this endpoint. Virtual machines will be built in the background. This task will return an task object that will allow you to monitor the build process using the appropriate API action. This action only offers a small subset of the full functionality needed when provisioning virtual machines - see the `build_from_spec` action for a full advanced virtual machine creation method.",
        "http_status": 201,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "zone",
              "description": null,
              "type": "CoreAPI/ArgumentSets/ZoneLookup",
              "required": false,
              "array": false,
              "default": null
            },
            {
              "name": "data_center",
              "description": null,
              "type": "CoreAPI/ArgumentSets/DataCenterLookup",
              "required": false,
              "array": false,
              "default": null
            },
            {
              "name": "package",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "disk_template",
              "description": null,
              "type": "CoreAPI/ArgumentSets/DiskTemplateLookup",
              "required": false,
              "array": false,
              "default": null
            },
            {
              "name": "disk_template_options",
              "description": null,
              "type": "CoreAPI/ArgumentSets/KeyValue",
              "required": false,
              "array": true,
              "default": null
            },
            {
              "name": "network",
              "description": null,
              "type": "CoreAPI/ArgumentSets/NetworkLookup",
              "required": false,
              "array": false,
              "default": null
            },
            {
              "name": "hostname",
              "description": null,
              "type": "Rapid/Scalars/String",
              "required": false,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/BuildField",
            "name": "build",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,state" }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/HostnameField",
            "name": "hostname",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/LocationRequired"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "zone",
            "description": null,
            "type": "CoreAPI/ArgumentSets/ZoneLookup",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/ArgumentSets/DataCenterLookup",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "package",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "disk_template",
            "description": null,
            "type": "CoreAPI/ArgumentSets/DiskTemplateLookup",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "disk_template_options",
            "description": null,
            "type": "CoreAPI/ArgumentSets/KeyValue",
            "required": false,
            "array": true,
            "default": null
          },
          {
            "name": "network",
            "description": null,
            "type": "CoreAPI/ArgumentSets/NetworkLookup",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "hostname",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/ZoneLookup",
        "name": "Zone Lookup",
        "description": "Provides for zones to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": ["CoreAPI/ArgumentSets/ZoneLookup/ZoneNotFound"]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/ZoneLookup/ZoneNotFound",
        "name": null,
        "description": "No zone was found matching any of the criteria provided in the arguments",
        "code": "zone_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
        "name": "Virtual Machine Package Lookup",
        "description": "Provides for virtual machine packages to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup/VirtualMachinePackageNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup/VirtualMachinePackageNotFound",
        "name": null,
        "description": "No package was found matching any of the criteria provided in the arguments",
        "code": "package_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/DiskTemplateLookup",
        "name": "Disk Template Lookup",
        "description": "Provides for disk templates to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/ArgumentSets/DiskTemplateLookup/DiskTemplateNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/DiskTemplateLookup/DiskTemplateNotFound",
        "name": null,
        "description": "No disk template was found matching any of the criteria provided in the arguments",
        "code": "disk_template_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/KeyValue",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "key",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "value",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/NetworkLookup",
        "name": "Network Lookup",
        "description": "Provides for networks to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "permalink",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/ArgumentSets/NetworkLookup/NetworkNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/NetworkLookup/NetworkNotFound",
        "name": null,
        "description": "No network was found matching any of the criteria provided in the arguments",
        "code": "network_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Errors/PermissionDenied",
        "name": null,
        "description": "The authenticated identity is not permitted to perform this action",
        "code": "permission_denied",
        "http_status": 403,
        "fields": [
          {
            "id": "CoreAPI/Errors/PermissionDenied/DetailsField",
            "name": "details",
            "description": "Additional information regarding the reason why permission was denied",
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildEndpoint/LocationRequired",
        "name": null,
        "description": "A zone or a data_center argument must be provided",
        "code": "location_required",
        "http_status": 422,
        "fields": []
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Task",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Task/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/StatusField",
            "name": "status",
            "description": null,
            "type": "CoreAPI/Objects/TaskStatusEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/StartedAtField",
            "name": "started_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/FinishedAtField",
            "name": "finished_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Task/ProgressField",
            "name": "progress",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Objects/TaskStatusEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "pending", "description": "Pending" },
          { "name": "running", "description": "Running" },
          { "name": "completed", "description": "Completed" },
          { "name": "failed", "description": "Failed" }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild/SpecXmlField",
            "name": "spec_xml",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild/StateField",
            "name": "state",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuildStateEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild/VirtualMachineField",
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuildStateEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "draft", "description": null },
          { "name": "failed", "description": null },
          { "name": "pending", "description": null },
          { "name": "complete", "description": null },
          { "name": "building", "description": null }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint",
        "name": "Build virtual machine (from spec)",
        "description": "Builds a new virtual machine by receiving a virtual machine spec document",
        "http_status": 201,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "xml",
              "description": null,
              "type": "Rapid/Scalars/String",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/BuildField",
            "name": "build",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,state" }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/HostnameField",
            "name": "hostname",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/InvalidSpecXML"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "xml",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/InvalidSpecXML",
        "name": null,
        "description": "The spec XML provided is invalid",
        "code": "invalid_spec_xml",
        "http_status": 400,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/BuildFromSpecEndpoint/InvalidSpecXML/ErrorsField",
            "name": "errors",
            "description": "A textual description of the errors with the provided XML",
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint",
        "name": "Start virtual machine",
        "description": "Queues a task to start a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StartEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Errors/TaskQueueingError",
        "name": null,
        "description": "This error means that a background task that was needed to complete your request could not be queued",
        "code": "task_queueing_error",
        "http_status": 406,
        "fields": [
          {
            "id": "CoreAPI/Errors/TaskQueueingError/DetailsField",
            "name": "details",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint",
        "name": "Stop virtual machine",
        "description": "Queues a task to stop a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/StopEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint",
        "name": "Shutdown virtual machine",
        "description": "Queues a task to shutdown a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ShutdownEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint",
        "name": "Reset virtual machine",
        "description": "Queues a task to reset a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name,status" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ResetEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint",
        "name": "Create console session",
        "description": "Creates a new console session which can be opened in a browser",
        "http_status": 201,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/ConsoleSessionField",
            "name": "console_session",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/ConsoleSession",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,url,expires_at,virtual_machine[id,hostname,fqdn,name,state]"
            }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/VirtualMachineMustBeStarted"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/VirtualMachineMustBeStarted",
        "name": null,
        "description": "Virtual machines must be in a started state to create console sessions",
        "code": "virtual_machine_must_be_started",
        "http_status": 406,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/CreateConsoleSessionEndpoint/VirtualMachineMustBeStarted/CurrentStateField",
            "name": "current_state",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/VirtualMachines/Objects/ConsoleSession",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Objects/ConsoleSession/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/ConsoleSession/UrlField",
            "name": "url",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/ConsoleSession/ExpiresAtField",
            "name": "expires_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Objects/ConsoleSession/VirtualMachineField",
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint",
        "name": "Delete virtual machine",
        "description": "Moves an existing virtual machine to the trash",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": false,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint/TrashObjectField",
            "name": "trash_object",
            "description": null,
            "type": "CoreAPI/Objects/TrashObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/PermissionDenied"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/TrashObject",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/TrashObject/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/TrashObject/KeepUntilField",
            "name": "keep_until",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint",
        "name": "Change package",
        "description": "Change a package for a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "virtual_machine_package",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangePackageEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "virtual_machine_package",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint",
        "name": "Change flexible resources",
        "description": "Change the flexible resources assigned to a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "resources",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineFlexibleResources",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint/TaskField",
            "name": "task",
            "description": null,
            "type": "CoreAPI/Objects/Task",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/Errors/TaskQueueingError",
          "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint/FlexibleResourcesUnavailableToOrganization"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "resources",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineFlexibleResources",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineFlexibleResources",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "cpu_cores",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "memory_in_gb",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachines/ChangeFlexibleResourcesEndpoint/FlexibleResourcesUnavailableToOrganization",
        "name": null,
        "description": "The orgainzation is not permitted to use flexible resources",
        "code": "flexible_resources_unavailable_to_organization",
        "http_status": 403,
        "fields": []
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds",
        "name": null,
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "info",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint",
        "name": "Get virtual machine build",
        "description": "Return virtual machine build information",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine_build",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineBuildLookup",
              "required": false,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint/VirtualMachineBuildField",
            "name": "virtual_machine_build",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineBuild",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,state,created_at,spec_xml,virtual_machine[id,name,hostname,fqdn,state]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachineBuilds/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine_build",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineBuildLookup",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineBuildLookup",
        "name": "Virtual Machine Build Lookup",
        "description": "Provides for virtual machine builds to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineBuildLookup/VirtualMachineBuildNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineBuildLookup/VirtualMachineBuildNotFound",
        "name": null,
        "description": "No build was found matching any of the criteria provided in the arguments",
        "code": "build_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages",
        "name": "Virtual Machine Packages",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint",
        "name": "List virtual machine packages",
        "description": "Returns a list of virtual machine packages",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "Provide an organization to only show packages available to the given organization (otherwise only public packages will be displayed)",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": false,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint/VirtualMachinePackagesField",
            "name": "virtual_machine_packages",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,permalink,cpu_cores,memory_in_gb,storage_in_gb,privacy,ipv4_addresses,icon[url]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "Provide an organization to only show packages available to the given organization (otherwise only public packages will be displayed)",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint",
        "name": "Get virtual machine package",
        "description": "Return information about a given virtual machine package",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine_package",
              "description": null,
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint/VirtualMachinePackageField",
            "name": "virtual_machine_package",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachinePackage",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/VirtualMachines/Controllers/VirtualMachinePackages/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine_package",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachinePackageLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies",
        "name": null,
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint"
          },
          {
            "name": "create_for_vm",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint"
          },
          {
            "name": "create_for_disk",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint",
        "name": "List disk backup policies",
        "description": "Returns a list of all disk backup policies for a given organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to return disk backup policies for",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint/DiskBackupPoliciesField",
            "name": "disk_backup_policies",
            "description": "The disk backup policies for the provided organization",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,retention,total_size,target[id,name],schedule[interval,next_invocation_at]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/PermissionDenied"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to return disk backup policies for",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Backups/Objects/DiskBackupPolicy",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Backups/Objects/DiskBackupPolicy/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Backups/Objects/DiskBackupPolicy/RetentionField",
            "name": "retention",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Backups/Objects/DiskBackupPolicy/TotalSizeField",
            "name": "total_size",
            "description": null,
            "type": "Rapid/Scalars/Decimal",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Backups/Objects/DiskBackupPolicy/TargetField",
            "name": "target",
            "description": null,
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicyTarget",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Backups/Objects/DiskBackupPolicy/ScheduleField",
            "name": "schedule",
            "description": null,
            "type": "CoreAPI/Objects/Schedule",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "scalar",
      "value": {
        "id": "Rapid/Scalars/Decimal",
        "name": "Decimal",
        "description": null
      }
    },
    {
      "type": "polymorph",
      "value": {
        "id": "CoreAPI/Backups/Objects/DiskBackupPolicyTarget",
        "name": null,
        "description": null,
        "options": [
          {
            "name": "VirtualMachine",
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine"
          },
          { "name": "Disk", "type": "CoreAPI/Objects/Disk" }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Disk",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Disk/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Disk/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Disk/SizeInGbField",
            "name": "size_in_gb",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Schedule",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Schedule/FrequencyField",
            "name": "frequency",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Schedule/IntervalField",
            "name": "interval",
            "description": null,
            "type": "CoreAPI/Objects/ScheduleIntervalTypeEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Schedule/MinuteField",
            "name": "minute",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Schedule/NextInvocationAtField",
            "name": "next_invocation_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Schedule/TimeField",
            "name": "time",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Objects/ScheduleIntervalTypeEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "hourly", "description": "Hourly" },
          { "name": "daily", "description": "Daily" },
          { "name": "weekly", "description": "Weekly" },
          { "name": "monthly", "description": "Monthly" }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint",
        "name": "Get disk backup policy",
        "description": "Returns information about a specific disk backup policy",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "disk_backup_policy",
              "description": "The disk backup policy to get information for",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint/DiskBackupPolicyField",
            "name": "disk_backup_policy",
            "description": "The located disk backup policy",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "disk_backup_policy",
            "description": "The disk backup policy to get information for",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
        "name": "Disk Backup Policy Lookup",
        "description": "Provides for disk backup policies to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ObjectInTrash",
          "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup/DiskBackupPolicyNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup/DiskBackupPolicyNotFound",
        "name": null,
        "description": "No disk backup policies was found matching any of the criteria provided in the arguments",
        "code": "disk_backup_policy_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint",
        "name": "Create disk backup policy for Virtual Machine",
        "description": "Creates a new disk backup policy for a virtual machine",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "virtual_machine",
              "description": "The virtual machine to create the disk backup policy for",
              "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "Details for the new disk backup policy",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint/DiskBackupPolicyField",
            "name": "disk_backup_policy",
            "description": "The new disk backup policy that has been created",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,retention,schedule,target[id]" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/Errors/PermissionDenied"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForVmEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "virtual_machine",
            "description": "The virtual machine to create the disk backup policy for",
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "Details for the new disk backup policy",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "retention",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "schedule",
            "description": null,
            "type": "CoreAPI/ArgumentSets/ScheduleArguments",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/ScheduleArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "frequency",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "interval",
            "description": null,
            "type": "CoreAPI/Objects/ScheduleIntervalTypeEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "minute",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "time",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint",
        "name": "Create disk backup policy for disk",
        "description": "Creates a new disk backup policy for a disk",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "disk",
              "description": "The disk to create the disk backup policy for",
              "type": "CoreAPI/ArgumentSets/DiskLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "Details for the new disk backup policy",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint/DiskBackupPolicyField",
            "name": "disk_backup_policy",
            "description": "The new disk backup policy that has been created",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,retention,schedule,target[id]" }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/Errors/PermissionDenied"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/CreateForDiskEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "disk",
            "description": "The disk to create the disk backup policy for",
            "type": "CoreAPI/ArgumentSets/DiskLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "Details for the new disk backup policy",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/ArgumentSets/DiskLookup",
        "name": "Disk Lookup",
        "description": "Provides for disks to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": ["CoreAPI/ArgumentSets/DiskLookup/DiskNotFound"]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/ArgumentSets/DiskLookup/DiskNotFound",
        "name": null,
        "description": "No disks was found matching any of the criteria provided in the arguments",
        "code": "disk_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint",
        "name": "Update a disk backup policy",
        "description": "Updates the disk backup policy with the provided details",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "disk_backup_policy",
              "description": "The disk backup policy to update",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "Details for the disk backup policy",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint/DiskBackupPolicyField",
            "name": "disk_backup_policy",
            "description": "The disk backup policy that has been updated",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,retention,schedule,target[id]" }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "disk_backup_policy",
            "description": "The disk backup policy to update",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "Details for the disk backup policy",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint",
        "name": "Delete disk backup policy",
        "description": "Deletes a disk backup policy and moves it to the trash",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "disk_backup_policy",
              "description": "The disk backup policy to delete",
              "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint/DiskBackupPolicyField",
            "name": "disk_backup_policy",
            "description": "The disk backup policy that has been destroyed",
            "type": "CoreAPI/Backups/Objects/DiskBackupPolicy",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id" }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Backups/Controllers/DiskBackupPolicies/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "disk_backup_policy",
            "description": "The disk backup policy to delete",
            "type": "CoreAPI/Backups/ArgumentSets/DiskBackupPolicyLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones",
        "name": "DNS Zones",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint"
          },
          {
            "name": "create",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint"
          },
          {
            "name": "verify",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint"
          },
          {
            "name": "verification_details",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint"
          },
          {
            "name": "update_ttl",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint",
        "name": "List DNS zones",
        "description": "Returns a list of all DNS zones for a given organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to return DNS zones for",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint/DnsZonesField",
            "name": "dns_zones",
            "description": "The DNS zones for the provided organization",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/PermissionDenied"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to return DNS zones for",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSZone",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSZone/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSZone/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSZone/TtlField",
            "name": "ttl",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSZone/VerifiedField",
            "name": "verified",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSZone/InfrastructureZoneField",
            "name": "infrastructure_zone",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint",
        "name": "Get DNS zone",
        "description": "Return information about a DNS zone",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to return information for",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint/DnsZoneField",
            "name": "dns_zone",
            "description": "The DNS zone object",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to return information for",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
        "name": "DNS Zone Lookup",
        "description": "Provides for DNS zones to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/DNS/ArgumentSets/DNSZoneLookup/DNSZoneNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup/DNSZoneNotFound",
        "name": null,
        "description": "No DNS zone was found matching any of the criteria provided in the arguments",
        "code": "dns_zone_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint",
        "name": "Create DNS zone",
        "description": "Create a new DNS zone within an existing organization",
        "http_status": 201,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to create the new DNS zone inside of",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "details",
              "description": "The details for the new DNS zone",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneArguments",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "skip_verification",
              "description": "If true, this domain will automatically be verified after creation. This option is only available to privileged identities so will only work for a small number of users.",
              "type": "Rapid/Scalars/Boolean",
              "required": false,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint/DnsZoneField",
            "name": "dns_zone",
            "description": "The new DNS zone that has been created",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/Errors/PermissionDenied"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/CreateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to create the new DNS zone inside of",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "details",
            "description": "The details for the new DNS zone",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneArguments",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "skip_verification",
            "description": "If true, this domain will automatically be verified after creation. This option is only available to privileged identities so will only work for a small number of users.",
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSZoneArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "ttl",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint",
        "name": "Verify DNS zone",
        "description": "Attempt to verify a DNS zone",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to attempt to verify",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/DnsZoneField",
            "name": "dns_zone",
            "description": "The DNS zone that has been verified",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/DNSZoneNotVerified",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to attempt to verify",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/DNSZoneNotVerified",
        "name": null,
        "description": "The DNS zone could not be verified, please check the verification details and try again",
        "code": "dns_zone_not_verified",
        "http_status": 422,
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/VerifyEndpoint/DNSZoneNotVerified/VerificationDetailsField",
            "name": "verification_details",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSZoneVerificationDetails",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSZoneVerificationDetails",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSZoneVerificationDetails/NameserversField",
            "name": "nameservers",
            "description": "The nameservers that the domain must be pointed to",
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSZoneVerificationDetails/TxtRecordField",
            "name": "txt_record",
            "description": "The value for a TXT record to be placed at the root of the domain if the nameservers are not set to the values above",
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited",
        "name": null,
        "description": "Infrastructure DNS zones cannot be edited through the API. These are managed exclusively by Katapult.",
        "code": "infrastructure_dns_zone_cannot_be_edited",
        "http_status": 403,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint",
        "name": "Verification details",
        "description": "Settings required before a DNS zone can be verified",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to get verification details for",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint/DetailsField",
            "name": "details",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSZoneVerificationDetails",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint/DNSZoneAlreadyVerified",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to get verification details for",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/VerificationDetailsEndpoint/DNSZoneAlreadyVerified",
        "name": null,
        "description": "This DNS zone is already verified, and does not require any verification details",
        "code": "dns_zone_already_verified",
        "http_status": 422,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint",
        "name": "Update TTL",
        "description": "Update a DNS zone's TTL value",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to update the TTL for",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "ttl",
              "description": "The new TTL value for the DNS zone",
              "type": "Rapid/Scalars/Integer",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint/DnsZoneField",
            "name": "dns_zone",
            "description": "The DNS zone with the new TTL value",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/UpdateTtlEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to update the TTL for",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "ttl",
            "description": "The new TTL value for the DNS zone",
            "type": "Rapid/Scalars/Integer",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint",
        "name": "Delete DNS zone",
        "description": "Delete a DNS zone",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to destroy",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint/DnsZoneField",
            "name": "dns_zone",
            "description": "The DNS zone that has been destroyed",
            "type": "CoreAPI/DNS/Objects/DNSZone",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSZones/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to destroy",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords",
        "name": "DNS Records",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint"
          },
          {
            "name": "create",
            "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint",
        "name": "List DNS records",
        "description": "Provides a full list of all DNS records for a specific zone",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone to find all DNS records for",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint/DnsRecordsField",
            "name": "dns_records",
            "description": "The DNS records that belong to this DNS zone",
            "type": "CoreAPI/DNS/Objects/DNSRecord",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,record_type,ttl,properties[name,ip,flags,property_type,property_value,host,priority,priority,weight,port,target,algorithm,fingerprint_type,fingerprint,data,virtual_machine[id,name,fqdn]]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone to find all DNS records for",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecord",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecord/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecord/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecord/TtlField",
            "name": "ttl",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecord/RecordTypeField",
            "name": "record_type",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSRecordTypeEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecord/PropertiesField",
            "name": "properties",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSRecordProperties",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypeEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "a", "description": null },
          { "name": "aaaa", "description": null },
          { "name": "caa", "description": null },
          { "name": "cname", "description": null },
          { "name": "mx", "description": null },
          { "name": "ns", "description": null },
          { "name": "srv", "description": null },
          { "name": "sshfp", "description": null },
          { "name": "txt", "description": null },
          { "name": "virtual_machine", "description": null }
        ]
      }
    },
    {
      "type": "polymorph",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordProperties",
        "name": null,
        "description": null,
        "options": [
          { "name": "A", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/A" },
          { "name": "AAAA", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/AAAA" },
          { "name": "CAA", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/CAA" },
          {
            "name": "CNAME",
            "type": "CoreAPI/DNS/Objects/DNSRecordTypes/CNAME"
          },
          { "name": "MX", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/MX" },
          { "name": "NS", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/NS" },
          { "name": "SRV", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV" },
          {
            "name": "SSHFP",
            "type": "CoreAPI/DNS/Objects/DNSRecordTypes/SSHFP"
          },
          { "name": "TXT", "type": "CoreAPI/DNS/Objects/DNSRecordTypes/TXT" },
          {
            "name": "VirtualMachine",
            "type": "CoreAPI/DNS/Objects/DNSRecordTypes/VirtualMachine"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/A",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/A/IpField",
            "name": "ip",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/AAAA",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/AAAA/IpField",
            "name": "ip",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CAA",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CAA/FlagsField",
            "name": "flags",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CAA/PropertyTypeField",
            "name": "property_type",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSRecordTypes/PropertyTypeEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CAA/PropertyValueField",
            "name": "property_value",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/PropertyTypeEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "issue", "description": null },
          { "name": "issuewild", "description": null },
          { "name": "iodef", "description": null }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CNAME",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/CNAME/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/MX",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/MX/HostField",
            "name": "host",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/MX/PriorityField",
            "name": "priority",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/NS",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/NS/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV/PriorityField",
            "name": "priority",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV/WeightField",
            "name": "weight",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV/PortField",
            "name": "port",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SRV/TargetField",
            "name": "target",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SSHFP",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SSHFP/AlgorithmField",
            "name": "algorithm",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SSHFP/FingerprintTypeField",
            "name": "fingerprint_type",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/SSHFP/FingerprintField",
            "name": "fingerprint",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/TXT",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/TXT/DataField",
            "name": "data",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/DNS/Objects/DNSRecordTypes/VirtualMachine",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/DNS/Objects/DNSRecordTypes/VirtualMachine/VirtualMachineField",
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint",
        "name": "Get DNS record",
        "description": "Return information about a DNS record",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_record",
              "description": "The DNS record to return information for",
              "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint/DnsRecordField",
            "name": "dns_record",
            "description": "The DNS record details",
            "type": "CoreAPI/DNS/Objects/DNSRecord",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,record_type,ttl,properties[name,ip,flags,property_type,property_value,host,priority,priority,weight,port,target,algorithm,fingerprint_type,fingerprint,data,virtual_machine[id,name,fqdn]]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_record",
            "description": "The DNS record to return information for",
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
        "name": "DNS Record Lookup",
        "description": "Provides for DNS records to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/DNS/ArgumentSets/DNSRecordLookup/DNSRecordNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup/DNSRecordNotFound",
        "name": null,
        "description": "No DNS record was found matching any of the criteria provided in the arguments",
        "code": "dns_record_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint",
        "name": "Create DNS record",
        "description": "Create a DNS record with the provided details",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_zone",
              "description": "The DNS zone that the new record will belong to",
              "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "details",
              "description": "The details for the new DNS record",
              "type": "CoreAPI/DNS/ArgumentSets/DNSRecordArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint/DnsRecordField",
            "name": "dns_record",
            "description": "The new DNS record that has been created",
            "type": "CoreAPI/DNS/Objects/DNSRecord",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,record_type,ttl,properties[name,ip,flags,property_type,property_value,host,priority,priority,weight,port,target,algorithm,fingerprint_type,fingerprint,data,virtual_machine[id,name,fqdn]]"
            }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/Errors/PermissionDenied",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/CreateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_zone",
            "description": "The DNS zone that the new record will belong to",
            "type": "CoreAPI/DNS/ArgumentSets/DNSZoneLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "details",
            "description": "The details for the new DNS record",
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSRecordArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "ttl",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "record_type",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSRecordTypeEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": null,
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordPropertiesArguments",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/ArgumentSets/DNSRecordPropertiesArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "ip",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "flags",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "property_type",
            "description": null,
            "type": "CoreAPI/DNS/Objects/DNSRecordTypes/PropertyTypeEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "property_value",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "host",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "priority",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "weight",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "port",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "target",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "algorithm",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "fingerprint_type",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "fingerprint",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "data",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "virtual_machine",
            "description": null,
            "type": "CoreAPI/VirtualMachines/ArgumentSets/VirtualMachineLookup",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint",
        "name": "Update DNS record",
        "description": "Update a DNS record with new information",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_record",
              "description": "The DNS record that should be updated",
              "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "details",
              "description": "The new details for the DNS record",
              "type": "CoreAPI/DNS/ArgumentSets/DNSRecordArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint/DnsRecordField",
            "name": "dns_record",
            "description": "The updated DNS record",
            "type": "CoreAPI/DNS/Objects/DNSRecord",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,record_type,ttl,properties[name,ip,flags,property_type,property_value,host,priority,priority,weight,port,target,algorithm,fingerprint_type,fingerprint,data,virtual_machine[id,name,fqdn]]"
            }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_record",
            "description": "The DNS record that should be updated",
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "details",
            "description": "The new details for the DNS record",
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint",
        "name": "Delete DNS record",
        "description": "Delete a DNS record",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "dns_record",
              "description": "The DNS record to destroy",
              "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint/DnsRecordField",
            "name": "dns_record",
            "description": "The DNS record that has been destroyed",
            "type": "CoreAPI/DNS/Objects/DNSRecord",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,record_type,ttl,properties[name,ip,flags,property_type,property_value,host,priority,priority,weight,port,target,algorithm,fingerprint_type,fingerprint,data,virtual_machine[id,name,fqdn]]"
            }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/DNS/Errors/InfrastructureDNSZoneCannotBeEdited"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/DNS/Controllers/DNSRecords/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "dns_record",
            "description": "The DNS record to destroy",
            "type": "CoreAPI/DNS/ArgumentSets/DNSRecordLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls",
        "name": "Firewalls",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "info",
            "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint"
          },
          {
            "name": "apply",
            "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint"
          },
          {
            "name": "changes",
            "endpoint": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint",
        "name": "Get organization firewall",
        "description": "Returns details about for an organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to return the firewall for",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint/FirewallField",
            "name": "firewall",
            "description": "The firewall properties for the provided organization",
            "type": "CoreAPI/Firewalls/Objects/Firewall",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/PermissionDenied"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to return the firewall for",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/Firewall",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Objects/Firewall/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/Firewall/EgressDefaultField",
            "name": "egress_default",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/Firewall/IngressDefaultField",
            "name": "ingress_default",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/Firewall/ChangesPendingField",
            "name": "changes_pending",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "accept", "description": null },
          { "name": "drop", "description": null }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint",
        "name": "Update firewall properties",
        "description": "Updates a firewall with new properties",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "firewall",
              "description": null,
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": null,
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint/FirewallField",
            "name": "firewall",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/Firewall",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "firewall",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
        "name": "Firewall Lookup",
        "description": "Provides for firewalls to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/Firewalls/ArgumentSets/FirewallLookup/FirewallNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup/FirewallNotFound",
        "name": null,
        "description": "No firewall was found matching any of the criteria provided in the arguments",
        "code": "firewall_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "ingress_default",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "egress_default",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint",
        "name": "Apply a firewall",
        "description": "Applies a firewall, activating its rules",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "firewall",
              "description": null,
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint/FirewallField",
            "name": "firewall",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/Firewall",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,changes_pending" }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/ApplyEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "firewall",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint",
        "name": "Get pending firewall changes",
        "description": "Returns currently pending changes for this firewall",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "firewall",
              "description": null,
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint/ChangesField",
            "name": "changes",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallChange",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "direction,change,rule[id,description],from,to"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/Firewalls/ChangesEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "firewall",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallChange",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallChange/DirectionField",
            "name": "direction",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallChange/ChangeField",
            "name": "change",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallChange/RuleField",
            "name": "rule",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallChange/FromField",
            "name": "from",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallChange/ToField",
            "name": "to",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules",
        "name": "Firewall Rules",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint"
          },
          {
            "name": "create",
            "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint",
        "name": "List firewall rules",
        "description": "Provides a full list of all rules for a specific firewall",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "firewall",
              "description": "The firewall to find all rules for",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint/RulesField",
            "name": "rules",
            "description": "The rules that belong to this firewall",
            "type": "CoreAPI/Firewalls/Objects/FirewallRule",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,description,direction,position,source,destination"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "firewall",
            "description": "The firewall to find all rules for",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallRule",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/DescriptionField",
            "name": "description",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/DirectionField",
            "name": "direction",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallDirectionEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/EnabledField",
            "name": "enabled",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/PositionField",
            "name": "position",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/ActionField",
            "name": "action",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/SourceField",
            "name": "source",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRule/DestinationField",
            "name": "destination",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallDirectionEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "ingress", "description": null },
          { "name": "egress", "description": null }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint/TypeField",
            "name": "type",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointTypesEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint/ResourceField",
            "name": "resource",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint/TagNamesField",
            "name": "tag_names",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint/IpAddressField",
            "name": "ip_address",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpoint/PortsField",
            "name": "ports",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointPort",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointTypesEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "anywhere", "description": null },
          { "name": "address_list", "description": null },
          { "name": "virtual_machine", "description": null },
          { "name": "virtual_machine_group", "description": null },
          { "name": "ip_address", "description": null },
          { "name": "custom_ip_address", "description": null },
          { "name": "tags", "description": null },
          { "name": "all_virtual_machines", "description": null }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointPort",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointPort/PortField",
            "name": "port",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointPort/ProtocolField",
            "name": "protocol",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint",
        "name": "Create firewall rule",
        "description": "Create a firewall rule with the provided details",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "firewall",
              "description": "The firewall that the new rule will belong to",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The details for the new firewall rule",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint/RuleField",
            "name": "rule",
            "description": "The new firewall rule that has been created",
            "type": "CoreAPI/Firewalls/Objects/FirewallRule",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ValidationError",
          "CoreAPI/Errors/PermissionDenied"
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/CreateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "firewall",
            "description": "The firewall that the new rule will belong to",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The details for the new firewall rule",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "action",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallActionEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "direction",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallDirectionEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "description",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "enabled",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "source",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleEndpointArguments",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "destination",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleEndpointArguments",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleEndpointArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "ip_address",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "ports",
            "description": null,
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleEndpointPortArguments",
            "required": false,
            "array": true,
            "default": null
          },
          {
            "name": "resource",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "tag_names",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": true,
            "default": null
          },
          {
            "name": "type",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallRuleEndpointTypesEnum",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleEndpointPortArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "protocol",
            "description": null,
            "type": "CoreAPI/Firewalls/Objects/FirewallProtocolEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "port",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Firewalls/Objects/FirewallProtocolEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "TCP", "description": null },
          { "name": "UDP", "description": null },
          { "name": "ICMP", "description": null }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint",
        "name": "Update firewall rule",
        "description": "Update a firewall rule with new information",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "rule",
              "description": "The firewall rule that should be updated",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The new details for the firewall rule",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint/RuleField",
            "name": "rule",
            "description": "The updated firewall rule",
            "type": "CoreAPI/Firewalls/Objects/FirewallRule",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,description,direction,enabled,action,source[id,endpoint_type,ports],destination[id,endpoint_type,ports]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "rule",
            "description": "The firewall rule that should be updated",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The new details for the firewall rule",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup",
        "name": "Firewall Rule Lookup",
        "description": "Provides for firewall rules to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup/FirewallRuleNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup/FirewallRuleNotFound",
        "name": null,
        "description": "No firewall rule was found matching any of the criteria provided in the arguments",
        "code": "firewall_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint",
        "name": "Delete firewall rule",
        "description": "Delete a firewall rule",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "rule",
              "description": "The firewall rule to destroy",
              "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint/RuleField",
            "name": "rule",
            "description": "The firewall rule that has been destroyed",
            "type": "CoreAPI/Firewalls/Objects/FirewallRule",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,description,direction,enabled,action,source[id,address_type,ports],destination[id,address_type,ports]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Firewalls/Controllers/FirewallRules/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "rule",
            "description": "The firewall rule to destroy",
            "type": "CoreAPI/Firewalls/ArgumentSets/FirewallRuleLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Controllers/Networks",
        "name": "Networks",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "available_networks",
            "endpoint": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint",
        "name": "List available networks",
        "description": "Returns a list of all networks available for an organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint/NetworksField",
            "name": "networks",
            "description": null,
            "type": "CoreAPI/Objects/Network",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,data_center[id,name,permalink]"
            }
          },
          {
            "id": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint/VirtualNetworksField",
            "name": "virtual_networks",
            "description": null,
            "type": "CoreAPI/Objects/VirtualNetwork",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,data_center[id,name,permalink]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Controllers/Networks/AvailableNetworksEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/Network",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/Network/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Network/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/Network/DataCenterField",
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/Objects/DataCenter",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Objects/VirtualNetwork",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Objects/VirtualNetwork/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/VirtualNetwork/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Objects/VirtualNetwork/DataCenterField",
            "name": "data_center",
            "description": null,
            "type": "CoreAPI/Objects/DataCenter",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/Certificates/Controllers/Certificates",
        "name": null,
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "index",
            "endpoint": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint",
        "name": "List certificates",
        "description": "Provides a full list of certificates",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": null,
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint/CertificatesField",
            "name": "certificates",
            "description": null,
            "type": "CoreAPI/Certificates/Objects/Certificate",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,issuer,state,expires_at,last_issued_at"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Certificates/Controllers/Certificates/IndexEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": null,
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/Certificates/Objects/Certificate",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/AdditionalNamesField",
            "name": "additional_names",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/IssuerField",
            "name": "issuer",
            "description": null,
            "type": "CoreAPI/Certificates/Objects/IssuerEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/StateField",
            "name": "state",
            "description": null,
            "type": "CoreAPI/Certificates/Objects/CertificateStateEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/CreatedAtField",
            "name": "created_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/ExpiresAtField",
            "name": "expires_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/LastIssuedAtField",
            "name": "last_issued_at",
            "description": null,
            "type": "Rapid/Scalars/UnixTime",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/IssueErrorField",
            "name": "issue_error",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/AuthorizationMethodField",
            "name": "authorization_method",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/CertificateApiUrlField",
            "name": "certificate_api_url",
            "description": "This is the URL that can be used to access this certificate's details. through the certificate API (a different API to this one). If null, this means that it is no longer available. If that is the case, you can get a new URL by resetting the API token for this certificate.",
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/CertificateField",
            "name": "certificate",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/ChainField",
            "name": "chain",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/Certificates/Objects/Certificate/PrivateKeyField",
            "name": "private_key",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Certificates/Objects/IssuerEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "lets_encrypt", "description": "Let's Encrypt" },
          { "name": "custom", "description": "Custom" },
          { "name": "self_signed", "description": "Self Signed" }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/Certificates/Objects/CertificateStateEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "pending", "description": null },
          { "name": "issue_failed", "description": null },
          { "name": "issued", "description": null },
          { "name": "issuing", "description": null }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint",
        "name": "Get certificate",
        "description": "Return details for a specific certificate",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "certificate",
              "description": null,
              "type": "CoreAPI/Certificates/ArgumentSets/CertificateLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint/CertificateField",
            "name": "certificate",
            "description": null,
            "type": "CoreAPI/Certificates/Objects/Certificate",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/Certificates/Controllers/Certificates/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "certificate",
            "description": null,
            "type": "CoreAPI/Certificates/ArgumentSets/CertificateLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/Certificates/ArgumentSets/CertificateLookup",
        "name": "Certificate Lookup",
        "description": "Provides for certificates to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/Errors/ObjectInTrash",
          "CoreAPI/Certificates/ArgumentSets/CertificateLookup/CertificateNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/Certificates/ArgumentSets/CertificateLookup/CertificateNotFound",
        "name": null,
        "description": "No certificate was found matching any of the criteria provided in the arguments",
        "code": "certificate_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers",
        "name": "Load Balancers",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint"
          },
          {
            "name": "create",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint",
        "name": "List load balancers",
        "description": "Returns a list of all load balancers for a given organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to return all load balancers for",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint/LoadBalancersField",
            "name": "load_balancers",
            "description": "The load balancers owned by this organization",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,name,resource_type,ip_address[address],resources[name,id]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to return all load balancers for",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/NameField",
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/ResourceTypeField",
            "name": "resource_type",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/ResourceTypesEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/ResourcesField",
            "name": "resources",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerResource",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/IpAddressField",
            "name": "ip_address",
            "description": null,
            "type": "CoreAPI/Objects/IPAddress",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/HttpsRedirectField",
            "name": "https_redirect",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/BackendCertificateField",
            "name": "backend_certificate",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancer/BackendCertificateKeyField",
            "name": "backend_certificate_key",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/ResourceTypesEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "virtual_machines", "description": null },
          { "name": "virtual_machine_groups", "description": null },
          { "name": "tags", "description": null }
        ]
      }
    },
    {
      "type": "polymorph",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerResource",
        "name": null,
        "description": null,
        "options": [
          {
            "name": "VirtualMachine",
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachine"
          },
          {
            "name": "VirtualMachineGroup",
            "type": "CoreAPI/VirtualMachines/Objects/VirtualMachineGroup"
          },
          { "name": "Tag", "type": "CoreAPI/Objects/Tag" }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint",
        "name": "Get load balancer",
        "description": "Returns details about a load balancer",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer",
              "description": "The load balancer to return the details for",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint/LoadBalancerField",
            "name": "load_balancer",
            "description": "The load balancer",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,resource_type,ip_address[address],resources[name,id],https_redirect"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer",
            "description": "The load balancer to return the details for",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
        "name": "Load balancer lookup",
        "description": "Provides for load balancers to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup/LoadBalancerNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup/LoadBalancerNotFound",
        "name": null,
        "description": "No load balancer was found matching any of the criteria provided in the arguments",
        "code": "load_balancer_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint",
        "name": "Create load balancer",
        "description": "Create a new load balancer for a given organization",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "organization",
              "description": "The organization to create the load balancer for",
              "type": "CoreAPI/ArgumentSets/OrganizationLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The properties for the new load balancer",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint/LoadBalancerField",
            "name": "load_balancer",
            "description": "The load balancer that has been created",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,ip_address[address],resource_type,resources[name,id]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/CreateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "organization",
            "description": "The organization to create the load balancer for",
            "type": "CoreAPI/ArgumentSets/OrganizationLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The properties for the new load balancer",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "name",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "resource_type",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/ResourceTypesEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "resource_ids",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": true,
            "default": null
          },
          {
            "name": "data_center",
            "description": "The data center for the load balancer",
            "type": "CoreAPI/ArgumentSets/DataCenterLookup",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint",
        "name": "Update load balancer",
        "description": "Updates a load balancer with new properties",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer",
              "description": "The load balancer to update",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The new properties for the load balancer",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint/LoadBalancerField",
            "name": "load_balancer",
            "description": "The load balancer that has been updated",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "id,name,ip_address[address],resource_type,resources[name,id]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer",
            "description": "The load balancer to update",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The new properties for the load balancer",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint",
        "name": "Delete load balancer",
        "description": "Delete a load balancer",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer",
              "description": "The load balancer to destroy",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint/LoadBalancerField",
            "name": "load_balancer",
            "description": "The load balancer that has been destroyed",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancer",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id,name" }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancers/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer",
            "description": "The load balancer to destroy",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "controller",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules",
        "name": "Load Balancer Rules",
        "description": null,
        "authenticator": null,
        "endpoints": [
          {
            "name": "list",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint"
          },
          {
            "name": "info",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint"
          },
          {
            "name": "create",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint"
          },
          {
            "name": "update",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint"
          },
          {
            "name": "delete",
            "endpoint": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint"
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint",
        "name": "List load balancer rules",
        "description": "Returns a list of all rules for a given load balancer",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer",
              "description": "The load balancer to return all load rules for",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "1"
            },
            {
              "name": "per_page",
              "description": null,
              "type": "Rapid/Scalars/Integer",
              "required": false,
              "array": false,
              "default": "30"
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint/PaginationField",
            "name": "pagination",
            "description": null,
            "type": "Rapid/PaginationObject",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint/LoadBalancerRulesField",
            "name": "load_balancer_rules",
            "description": "The load balancer rules for this load balancer",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
            "null": false,
            "array": true,
            "spec": {
              "all": false,
              "spec": "id,listen_port,destination_port,protocol,algorithm,certificates[id,name],check_enabled"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/ListEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer",
            "description": "The load balancer to return all load rules for",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "1"
          },
          {
            "name": "per_page",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": "30"
          }
        ]
      }
    },
    {
      "type": "object",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
        "name": null,
        "description": null,
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/IdField",
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/AlgorithmField",
            "name": "algorithm",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/AlgorithmEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/DestinationPortField",
            "name": "destination_port",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/ListenPortField",
            "name": "listen_port",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/ProtocolField",
            "name": "protocol",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/ProtocolEnum",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/ProxyProtocolField",
            "name": "proxy_protocol",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CertificatesField",
            "name": "certificates",
            "description": null,
            "type": "CoreAPI/Certificates/Objects/Certificate",
            "null": false,
            "array": true,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/BackendSslField",
            "name": "backend_ssl",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/PassthroughSslField",
            "name": "passthrough_ssl",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckEnabledField",
            "name": "check_enabled",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckFallField",
            "name": "check_fall",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckIntervalField",
            "name": "check_interval",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckPathField",
            "name": "check_path",
            "description": null,
            "type": "Rapid/Scalars/String",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckProtocolField",
            "name": "check_protocol",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/CheckProtocolEnum",
            "null": true,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckRiseField",
            "name": "check_rise",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          },
          {
            "id": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule/CheckTimeoutField",
            "name": "check_timeout",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "null": false,
            "array": false,
            "spec": { "all": true, "spec": null }
          }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/AlgorithmEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "round_robin", "description": null },
          { "name": "least_connections", "description": null },
          { "name": "sticky", "description": null }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/ProtocolEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "HTTPS", "description": null },
          { "name": "TCP", "description": null },
          { "name": "HTTP", "description": null }
        ]
      }
    },
    {
      "type": "enum",
      "value": {
        "id": "CoreAPI/LoadBalancers/Objects/CheckProtocolEnum",
        "name": null,
        "description": null,
        "values": [
          { "name": "HTTP", "description": null },
          { "name": "TCP", "description": null }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint",
        "name": "Get load balancer rule",
        "description": "Returns details about a load balancer rule",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer_rule",
              "description": "The load balancer rule to return the details for",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint/LoadBalancerRuleField",
            "name": "load_balancer_rule",
            "description": "The resolved load balancer rule",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "*,certificates[id,name,additional_names,state]"
            }
          }
        ],
        "potential_errors": []
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/InfoEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer_rule",
            "description": "The load balancer rule to return the details for",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "lookup_argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
        "name": "Load balancer rule lookup",
        "description": "Provides for load balancer rules to be looked up",
        "arguments": [
          {
            "name": "id",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          }
        ],
        "potential_errors": [
          "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup/LoadBalancerRuleNotFound"
        ]
      }
    },
    {
      "type": "error",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup/LoadBalancerRuleNotFound",
        "name": null,
        "description": "No load balancer rule was found matching any of the criteria provided in the arguments",
        "code": "load_balancer_rule_not_found",
        "http_status": 404,
        "fields": []
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint",
        "name": "Create load balancer rule",
        "description": "Create a new load balancer rule",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer",
              "description": "The load balancer to create the rule for",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The properties for the new load balancer rule",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint/LoadBalancerRuleField",
            "name": "load_balancer_rule",
            "description": "The load balancer rule that has been created",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "*,certificates[id,name,additional_names,state]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/CreateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer",
            "description": "The load balancer to create the rule for",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The properties for the new load balancer rule",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleArguments",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "algorithm",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/AlgorithmEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "destination_port",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "https_redirect",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "listen_port",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "protocol",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/ProtocolEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "proxy_protocol",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "certificates",
            "description": null,
            "type": "CoreAPI/Certificates/ArgumentSets/CertificateLookup",
            "required": false,
            "array": true,
            "default": null
          },
          {
            "name": "check_enabled",
            "description": null,
            "type": "Rapid/Scalars/Boolean",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_fall",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_interval",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_path",
            "description": null,
            "type": "Rapid/Scalars/String",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_protocol",
            "description": null,
            "type": "CoreAPI/LoadBalancers/Objects/CheckProtocolEnum",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_rise",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          },
          {
            "name": "check_timeout",
            "description": null,
            "type": "Rapid/Scalars/Integer",
            "required": false,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint",
        "name": "Update load balancer rule",
        "description": "Updates a load balancer rule with new properties",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer_rule",
              "description": "The load balancer rule to update",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
              "required": true,
              "array": false,
              "default": null
            },
            {
              "name": "properties",
              "description": "The new properties for the load balancer rule",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleArguments",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint/LoadBalancerRuleField",
            "name": "load_balancer_rule",
            "description": "The load balancer that has been updated",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
            "null": false,
            "array": false,
            "spec": {
              "all": false,
              "spec": "*,certificates[id,name,additional_names,state]"
            }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/UpdateEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer_rule",
            "description": "The load balancer rule to update",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
            "required": true,
            "array": false,
            "default": null
          },
          {
            "name": "properties",
            "description": "The new properties for the load balancer rule",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleArguments",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    },
    {
      "type": "endpoint",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint",
        "name": "Delete load balancer rule",
        "description": "Delete a load balancer rule",
        "http_status": 200,
        "authenticator": null,
        "argument_set": {
          "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint/BaseArgumentSet",
          "name": null,
          "description": null,
          "arguments": [
            {
              "name": "load_balancer_rule",
              "description": "The load balancer rule to destroy",
              "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
              "required": true,
              "array": false,
              "default": null
            }
          ]
        },
        "fields": [
          {
            "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint/LoadBalancerRuleField",
            "name": "load_balancer_rule",
            "description": "The load balancer rule that has been destroyed",
            "type": "CoreAPI/LoadBalancers/Objects/LoadBalancerRule",
            "null": false,
            "array": false,
            "spec": { "all": false, "spec": "id" }
          }
        ],
        "potential_errors": ["CoreAPI/Errors/ValidationError"]
      }
    },
    {
      "type": "argument_set",
      "value": {
        "id": "CoreAPI/LoadBalancers/Controllers/LoadBalancerRules/DeleteEndpoint/BaseArgumentSet",
        "name": null,
        "description": null,
        "arguments": [
          {
            "name": "load_balancer_rule",
            "description": "The load balancer rule to destroy",
            "type": "CoreAPI/LoadBalancers/ArgumentSets/LoadBalancerRuleLookup",
            "required": true,
            "array": false,
            "default": null
          }
        ]
      }
    }
  ]
}
